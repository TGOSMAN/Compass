<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [debug\gpio_led_output.out]</title></head>
<body><HR>
<H1>Static Call Graph for image debug\gpio_led_output.out</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Sat Feb 10 11:20:43 2024
<BR><P>
<H3>Maximum Stack Usage =        440 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; gpsdataextract &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a>
 <LI><a href="#[3b]">ADC_OVR_DriverIRQHandler</a>
 <LI><a href="#[38]">ADC_SEQA_DriverIRQHandler</a>
 <LI><a href="#[39]">ADC_SEQB_DriverIRQHandler</a>
 <LI><a href="#[3a]">ADC_THCMP_DriverIRQHandler</a>
 <LI><a href="#[35]">BOD_DriverIRQHandler</a>
 <LI><a href="#[33]">CMP_CAPT_DriverIRQHandler</a>
 <LI><a href="#[3f]">CTIMER0_DriverIRQHandler</a>
 <LI><a href="#[2a]">DAC0_DriverIRQHandler</a>
 <LI><a href="#[27]">DefaultISR</a>
 <LI><a href="#[36]">FLASH_DriverIRQHandler</a>
 <LI><a href="#[30]">I2C0_DriverIRQHandler</a>
 <LI><a href="#[2f]">I2C1_DriverIRQHandler</a>
 <LI><a href="#[32]">MRT0_DriverIRQHandler</a>
 <LI><a href="#[41]">PIN_INT1_DriverIRQHandler</a>
 <LI><a href="#[42]">PIN_INT2_DriverIRQHandler</a>
 <LI><a href="#[43]">PIN_INT3_DriverIRQHandler</a>
 <LI><a href="#[44]">PIN_INT4_DriverIRQHandler</a>
 <LI><a href="#[45]">PIN_INT5_DriverIRQHandler</a>
 <LI><a href="#[46]">PIN_INT6_DriverIRQHandler</a>
 <LI><a href="#[47]">PIN_INT7_DriverIRQHandler</a>
 <LI><a href="#[29]">Reserved17_DriverIRQHandler</a>
 <LI><a href="#[2d]">Reserved21_DriverIRQHandler</a>
 <LI><a href="#[2e]">Reserved22_DriverIRQHandler</a>
 <LI><a href="#[31]">Reserved25_DriverIRQHandler</a>
 <LI><a href="#[3c]">Reserved36_DriverIRQHandler</a>
 <LI><a href="#[3d]">Reserved37_DriverIRQHandler</a>
 <LI><a href="#[3e]">Reserved38_DriverIRQHandler</a>
 <LI><a href="#[28]">SPI0_DriverIRQHandler</a>
 <LI><a href="#[2c]">USART1_DriverIRQHandler</a>
 <LI><a href="#[34]">WDT_DriverIRQHandler</a>
 <LI><a href="#[37]">WKT_DriverIRQHandler</a>
 <LI><a href="#[1]">NMI_Handler</a>
 <LI><a href="#[2]">HardFault_Handler</a>
 <LI><a href="#[3]">SVC_Handler</a>
 <LI><a href="#[4]">PendSV_Handler</a>
 <LI><a href="#[5]">SysTick_Handler</a>
 <LI><a href="#[6]">SPI0_IRQHandler</a>
 <LI><a href="#[7]">Reserved17_IRQHandler</a>
 <LI><a href="#[8]">DAC0_IRQHandler</a>
 <LI><a href="#[9]">USART0_IRQHandler</a>
 <LI><a href="#[a]">USART1_IRQHandler</a>
 <LI><a href="#[b]">Reserved21_IRQHandler</a>
 <LI><a href="#[c]">Reserved22_IRQHandler</a>
 <LI><a href="#[d]">I2C1_IRQHandler</a>
 <LI><a href="#[e]">I2C0_IRQHandler</a>
 <LI><a href="#[f]">Reserved25_IRQHandler</a>
 <LI><a href="#[10]">MRT0_IRQHandler</a>
 <LI><a href="#[11]">CMP_CAPT_IRQHandler</a>
 <LI><a href="#[12]">WDT_IRQHandler</a>
 <LI><a href="#[13]">BOD_IRQHandler</a>
 <LI><a href="#[14]">FLASH_IRQHandler</a>
 <LI><a href="#[15]">WKT_IRQHandler</a>
 <LI><a href="#[16]">ADC_SEQA_IRQHandler</a>
 <LI><a href="#[17]">ADC_SEQB_IRQHandler</a>
 <LI><a href="#[18]">ADC_THCMP_IRQHandler</a>
 <LI><a href="#[19]">ADC_OVR_IRQHandler</a>
 <LI><a href="#[1a]">Reserved36_IRQHandler</a>
 <LI><a href="#[1b]">Reserved37_IRQHandler</a>
 <LI><a href="#[1c]">Reserved38_IRQHandler</a>
 <LI><a href="#[1d]">CTIMER0_IRQHandler</a>
 <LI><a href="#[1e]">PIN_INT0_IRQHandler</a>
 <LI><a href="#[1f]">PIN_INT1_IRQHandler</a>
 <LI><a href="#[20]">PIN_INT2_IRQHandler</a>
 <LI><a href="#[21]">PIN_INT3_IRQHandler</a>
 <LI><a href="#[22]">PIN_INT4_IRQHandler</a>
 <LI><a href="#[23]">PIN_INT5_IRQHandler</a>
 <LI><a href="#[24]">PIN_INT6_IRQHandler</a>
 <LI><a href="#[25]">PIN_INT7_IRQHandler</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3b]">ADC_OVR_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[19]">ADC_OVR_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[38]">ADC_SEQA_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[16]">ADC_SEQA_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[39]">ADC_SEQB_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[17]">ADC_SEQB_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[3a]">ADC_THCMP_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[18]">ADC_THCMP_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[35]">BOD_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[13]">BOD_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[33]">CMP_CAPT_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[11]">CMP_CAPT_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[3f]">CTIMER0_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[1d]">CTIMER0_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[2a]">DAC0_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[8]">DAC0_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[27]">DefaultISR</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[36]">FLASH_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[14]">FLASH_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[30]">I2C0_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[e]">I2C0_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[2f]">I2C1_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[d]">I2C1_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[32]">MRT0_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[10]">MRT0_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[40]">PIN_INT0_DriverIRQHandler</a> from main.o(.text.PIN_INT0_DriverIRQHandler) referenced from startup_lpc804.o(.text)
 <LI><a href="#[1e]">PIN_INT0_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[41]">PIN_INT1_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[1f]">PIN_INT1_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[42]">PIN_INT2_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[20]">PIN_INT2_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[43]">PIN_INT3_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[21]">PIN_INT3_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[44]">PIN_INT4_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[22]">PIN_INT4_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[45]">PIN_INT5_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[23]">PIN_INT5_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[46]">PIN_INT6_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[24]">PIN_INT6_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[47]">PIN_INT7_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[25]">PIN_INT7_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[29]">Reserved17_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[7]">Reserved17_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[2d]">Reserved21_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[b]">Reserved21_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[2e]">Reserved22_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[c]">Reserved22_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[31]">Reserved25_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[f]">Reserved25_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[3c]">Reserved36_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[1a]">Reserved36_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[3d]">Reserved37_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[1b]">Reserved37_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[3e]">Reserved38_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[1c]">Reserved38_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[28]">SPI0_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[6]">SPI0_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[3]">SVC_Handler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[3]">SVC_Handler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[2b]">USART0_DriverIRQHandler</a> from main.o(.text.USART0_DriverIRQHandler) referenced from startup_lpc804.o(.text)
 <LI><a href="#[9]">USART0_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[2c]">USART1_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[a]">USART1_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[34]">WDT_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[12]">WDT_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[37]">WKT_DriverIRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.text)
 <LI><a href="#[15]">WKT_IRQHandler</a> from startup_lpc804.o(.text) referenced from startup_lpc804.o(.isr_vector)
 <LI><a href="#[26]">__main</a> from __main.o(!!!main) referenced from startup_lpc804.o(.text)
 <LI><a href="#[4b]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[49]">_sbackspace</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[4d]">_scanf_really_hex_real</a> from scanf_hexfp.o(.text) referenced from scanf2.o(x$fpl$scanf2)
 <LI><a href="#[4e]">_scanf_really_infnan</a> from scanf_infnan.o(.text) referenced from scanf2.o(x$fpl$scanf2)
 <LI><a href="#[4c]">_scanf_really_real</a> from scanf_fp.o(.text) referenced from scanf1.o(x$fpl$scanf1)
 <LI><a href="#[48]">_sgetc</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[4a]">isspace</a> from isspace.o(.text) referenced from strtod.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[26]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[4f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[51]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ae]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[af]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[52]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[b0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[59]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[b1]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[b2]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[53]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[b3]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[b4]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[b5]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[55]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[b8]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[56]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000018))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[ba]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[be]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[c0]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[c1]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[c6]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[5e]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[c7]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[c8]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[c9]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[ca]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[cb]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[cc]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[cd]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[50]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[ce]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[cf]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry7.o(.ARM.Collect$$rtentry$$00000007))

<P><STRONG><a name="[58]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[d0]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[5a]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; gpsdataextract &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d1]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[7f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5d]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[d2]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[5f]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[3b]"></a>ADC_OVR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>ADC_SEQA_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[39]"></a>ADC_SEQB_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>ADC_THCMP_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>BOD_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>CMP_CAPT_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[3f]"></a>CTIMER0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>DAC0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[27]"></a>DefaultISR</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>FLASH_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>I2C0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>I2C1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[32]"></a>MRT0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[41]"></a>PIN_INT1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>PIN_INT2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>PIN_INT3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[44]"></a>PIN_INT4_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>PIN_INT5_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>PIN_INT6_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[47]"></a>PIN_INT7_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>Reserved17_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>Reserved21_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[2e]"></a>Reserved22_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>Reserved25_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>Reserved36_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>Reserved37_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[3e]"></a>Reserved38_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>SPI0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>USART1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>WDT_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>WKT_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_lpc804.o(.text)
<LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_lpc804.o(.text)
<LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_lpc804.o(.text)
<LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_lpc804.o(.text)
<LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_lpc804.o(.text)
<LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[6]"></a>SPI0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[7]"></a>Reserved17_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[8]"></a>DAC0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[9]"></a>USART0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[a]"></a>USART1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[b]"></a>Reserved21_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[c]"></a>Reserved22_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[e]"></a>I2C0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[f]"></a>Reserved25_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[10]"></a>MRT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[11]"></a>CMP_CAPT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[12]"></a>WDT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[13]"></a>BOD_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[14]"></a>FLASH_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[15]"></a>WKT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[16]"></a>ADC_SEQA_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[17]"></a>ADC_SEQB_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[18]"></a>ADC_THCMP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[19]"></a>ADC_OVR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[1a]"></a>Reserved36_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[1b]"></a>Reserved37_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[1c]"></a>Reserved38_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[1d]"></a>CTIMER0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[1e]"></a>PIN_INT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[1f]"></a>PIN_INT1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[20]"></a>PIN_INT2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[21]"></a>PIN_INT3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[22]"></a>PIN_INT4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[23]"></a>PIN_INT5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[24]"></a>PIN_INT6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[25]"></a>PIN_INT7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc804.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.isr_vector)
</UL>
<P><STRONG><a name="[d3]"></a>__aeabi_uidivmod</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>__aeabi_idivmod</STRONG> (Thumb, 472 bytes, Stack size 8 bytes, aeabi_sdivfast.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_DriverIRQHandler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsdataextract
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsdataextract
</UL>

<P><STRONG><a name="[61]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsdataextract
</UL>

<P><STRONG><a name="[64]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[65]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsdataextract
</UL>

<P><STRONG><a name="[67]"></a>_ddiv</STRONG> (Thumb, 1072 bytes, Stack size 64 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[66]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsdataextract
</UL>

<P><STRONG><a name="[d4]"></a>_dfix</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, dfixi.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsdataextract
</UL>

<P><STRONG><a name="[d5]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[d6]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsdataextract
</UL>

<P><STRONG><a name="[d7]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __read_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
</UL>

<P><STRONG><a name="[6d]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[70]"></a>__strtod_int</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[d8]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>_sgetc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>_sbackspace</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[72]"></a>__fpl_dcmp_InfNaN</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, dcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[9a]"></a>__ARM_scalbn</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, dscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
</UL>

<P><STRONG><a name="[71]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[4c]"></a>_scanf_really_real</STRONG> (Thumb, 710 bytes, Stack size 120 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf1.o(x$fpl$scanf1)
</UL>
<P><STRONG><a name="[5c]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ab]"></a>strcmp</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, strcmpv6m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[73]"></a>__fpl_cmpreturn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cmpret.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[74]"></a>__fpl_dcheck_NaN2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[54]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[da]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__aeabi_lmul</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[db]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>_btod_etento</STRONG> (Thumb, 210 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[dc]"></a>_btod_d2e</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, btod.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>_btod_emul</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_mul
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[78]"></a>_btod_emuld</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _btod_emuld &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_mul
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[83]"></a>_btod_ediv</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _btod_ediv &rArr; btod_internal_div
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_div
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[79]"></a>_btod_edivd</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_edivd &rArr; btod_internal_div
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_div
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[80]"></a>__fpl_return_NaN</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, retnan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[60]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[dd]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>_scanf_really_hex_real</STRONG> (Thumb, 806 bytes, Stack size 72 bytes, scanf_hexfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _scanf_really_hex_real &rArr; __mathlib_narrow &rArr; __mathlib_tofloat &rArr; frexp &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf2.o(x$fpl$scanf2)
</UL>
<P><STRONG><a name="[4e]"></a>_scanf_really_infnan</STRONG> (Thumb, 300 bytes, Stack size 64 bytes, scanf_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _scanf_really_infnan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf2.o(x$fpl$scanf2)
</UL>
<P><STRONG><a name="[a7]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[e0]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[40]"></a>PIN_INT0_DriverIRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.PIN_INT0_DriverIRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>USART0_DriverIRQHandler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, main.o(.text.USART0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART0_DriverIRQHandler &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc804.o(.text)
</UL>
<P><STRONG><a name="[97]"></a>changeDIR</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, layer1.o(.text.changeDIR))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>gpsdataextract</STRONG> (Thumb, 684 bytes, Stack size 152 bytes, layer2.o(.text.gpsdataextract))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = gpsdataextract &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>initPWM</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, layer1.o(.text.initPWM))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>initPort</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, layer1.o(.text.initPort))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>main</STRONG> (Thumb, 100 bytes, Stack size 80 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = main &rArr; gpsdataextract &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsdataextract
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartinit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPWM
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeDIR
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPort
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[94]"></a>uartinit</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, layer1.o(.text.uartinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uartinit
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, btod.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_mul
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[9e]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[98]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 838 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[9b]"></a>__kernel_cos</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[9c]"></a>__kernel_poly</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[9d]"></a>__kernel_sin</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[a0]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[a1]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[a2]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[a3]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_overflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>

<P><STRONG><a name="[9f]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>

<P><STRONG><a name="[7d]"></a>__mathlib_narrow</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, narrow.o(i.__mathlib_narrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __mathlib_narrow &rArr; __mathlib_tofloat &rArr; frexp &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[a4]"></a>__mathlib_tofloat</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, narrow.o(i.__mathlib_tofloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __mathlib_tofloat &rArr; frexp &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>

<P><STRONG><a name="[89]"></a>__support_ldexp</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ldexp.o(i.__support_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __support_ldexp &rArr; ldexp &rArr; __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[7c]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scanf_fp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[aa]"></a>atan</STRONG> (Thumb, 472 bytes, Stack size 56 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[93]"></a>atan2</STRONG> (Thumb, 372 bytes, Stack size 40 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsdataextract
</UL>

<P><STRONG><a name="[8b]"></a>atof</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, atof.o(i.atof))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsdataextract
</UL>

<P><STRONG><a name="[92]"></a>cos</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsdataextract
</UL>

<P><STRONG><a name="[a5]"></a>frexp</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, frexp.o(i.frexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = frexp &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[a9]"></a>ldexp</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, ldexp.o(i.ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ldexp &rArr; __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
</UL>

<P><STRONG><a name="[91]"></a>sin</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsdataextract
</UL>

<P><STRONG><a name="[57]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[4b]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[a6]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[ac]"></a>_dcmpeq</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, drlef.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[ad]"></a>_drcmple</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, drlef.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[6f]"></a>_scanf_real</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, scanf1.o(x$fpl$scanf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>

<P><STRONG><a name="[7b]"></a>_scanf_hex_real</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _scanf_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[7a]"></a>_scanf_infnan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _scanf_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[63]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[62]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[6e]"></a>_local_sscanf</STRONG> (Thumb, 70 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[75]"></a>_fp_value</STRONG> (Thumb, 602 bytes, Stack size 80 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[84]"></a>btod_internal_mul</STRONG> (Thumb, 492 bytes, Stack size 56 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[86]"></a>btod_internal_div</STRONG> (Thumb, 520 bytes, Stack size 64 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = btod_internal_div
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[7e]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
